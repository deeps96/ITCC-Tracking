{"version":3,"sources":["./src/$_gendir lazy","./src/app/action-description/action-description.component.css","./src/app/action-description/action-description.component.html","./src/app/action-description/action-description.component.ts","./src/app/add-station/add-station.component.css","./src/app/add-station/add-station.component.html","./src/app/add-station/add-station.component.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/create-parcel/create-parcel.component.css","./src/app/create-parcel/create-parcel.component.html","./src/app/create-parcel/create-parcel.component.ts","./src/app/data-management/data-management.component.css","./src/app/data-management/data-management.component.html","./src/app/data-management/data-management.component.ts","./src/app/data-objects/authorization.ts","./src/app/data-objects/parcel-management.ts","./src/app/helper-methods.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/parcel-details/parcel-details.component.css","./src/app/parcel-details/parcel-details.component.html","./src/app/parcel-details/parcel-details.component.ts","./src/app/parcel-type/parcel-type.component.css","./src/app/parcel-type/parcel-type.component.html","./src/app/parcel-type/parcel-type.component.ts","./src/app/routing/app.routes.ts","./src/app/routing/auth.guard.ts","./src/app/services/authorization.service.ts","./src/app/services/data-management.service.ts","./src/app/services/parcel-management.service.ts","./src/app/services/staff-management.service.ts","./src/app/staff-management/staff-management.component.css","./src/app/staff-management/staff-management.component.html","./src/app/staff-management/staff-management.component.ts","./src/app/transportation-mode/transportation-mode.component.css","./src/app/transportation-mode/transportation-mode.component.html","./src/app/transportation-mode/transportation-mode.component.ts","./src/assets/config.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_gendir lazy\n// module id = ./src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \".container {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.deleteIcon {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/action-description/action-description.component.css\n// module id = ./src/app/action-description/action-description.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12\\\">\\n    <h1 class=\\\"center-align\\\">Action descriptions</h1>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12\\\">\\n      <table>\\n        <thead>\\n        <tr>\\n          <th>Actions</th>\\n          <th class=\\\"center-align\\\">Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let action of actions\\\">\\n          <td>{{action}}</td>\\n          <td class=\\\"center\\\">\\n            <a materialize=\\\"tooltip\\\" class=\\\"modal-trigger tooltipped\\\" (click)=\\\"openDeleteActionModal(action)\\\" href=\\\"#deleteActionModal\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Delete action description\\\" data-position=\\\"bottom\\\">\\n              <i class=\\\"material-icons deleteIcon blue-grey-text\\\">delete</i>\\n            </a>\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"actions && actions.length == 0\\\">\\n          <td colspan=\\\"4\\\" class=\\\"center\\\">No action description in database!</td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <a materialize=\\\"tooltip\\\" class=\\\"btn-floating waves-effect waves-light blue-grey tooltipped modal-trigger\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Add an action description\\\" data-position=\\\"right\\\" (click)=\\\"openNewActionModal()\\\" href=\\\"#addActionModal\\\">\\n              <i class=\\\"material-icons\\\">add</i>\\n            </a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<!-- Delete action modal -->\\n<div id=\\\"deleteActionModal\\\" class=\\\"modal bottom-sheet blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: true}]\\\" [materializeActions]=\\\"deleteActionModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h4>Are you sure, that you want to delete the action description?</h4>\\n    <p *ngIf=\\\"delAction\\\">{{delAction}} can´t get selected anymore if you proceed.</p>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"modal-action modal-close btn-flat\\\">Abort</a>\\n    <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\" (click)=\\\"deleteAction(delAction);\\\">Proceed</a>\\n  </div>\\n</div>\\n\\n<!-- Add action modal -->\\n<div id=\\\"addActionModal\\\" class=\\\"modal blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"newActionModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\">\\n      <i class=\\\"material-icons blue-grey-text\\\">cancel</i>\\n    </a>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <h4 class=\\\"center-align\\\">Add a new action description</h4>\\n        </div>\\n      </div>\\n      <form>\\n        <div class=\\\"row\\\">\\n          <p>\\n            The action description can contain #Location# #Transport# #DestinationPerson# #DeparturePerson# and #NoteOrPerson#\\n            Refer to <a href=\\\"https://github.com/deeps96/ITCC-Tracking/issues/27#issuecomment-366525246\\\">Link</a> for more details.\\n          </p>\\n        </div>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"action\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"action\\\" [(ngModel)]=\\\"newAction\\\" required>\\n            <label for=\\\"action\\\">Action description</label>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"waves-effect modal-action modal-close waves-green waves-darken-3 btn-flat\\\" (click)=\\\"addAction(newAction);\\\">Add action description</a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/action-description/action-description.component.html\n// module id = ./src/app/action-description/action-description.component.html\n// module chunks = main","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {MaterializeAction} from \"angular2-materialize\";\nimport {DataManagementService} from \"../services/data-management.service\";\n\n@Component({\n  selector: 'app-action-description',\n  templateUrl: './action-description.component.html',\n  styleUrls: ['./action-description.component.css']\n})\nexport class ActionDescriptionComponent implements OnInit {\n\n  public newAction: string;\n  public actions: string[] = [];\n  public delAction: string;\n  public newActionModalActions = new EventEmitter<string|MaterializeAction>();\n  public deleteActionModalActions = new EventEmitter<string|MaterializeAction>();\n\n  constructor(private dataManagementService: DataManagementService) { }\n\n  ngOnInit() {\n    this.updateActions();\n    this.newAction = \"\";\n  }\n\n  public openDeleteActionModal(action: string): void {\n    this.delAction = action;\n    this.deleteActionModalActions.emit({action: \"modal\", params: [ 'open' ]});\n  }\n\n  public openNewActionModal(): void {\n    this.newActionModalActions.emit({action: \"modal\", params: [ 'open' ]});\n  }\n\n  public addAction(action: string): void {\n    this.dataManagementService.addActionDescription(action).subscribe(response => {\n      this.updateActions();\n      this.newAction = \"\";\n    });\n  }\n\n  public deleteAction(action: string): void {\n    this.dataManagementService.removeActionDescription(action).subscribe(response => this.updateActions());\n  }\n\n  //actions\n  private updateActions(): void {\n    this.dataManagementService.listActionDescriptions().subscribe(response => this.actions = response);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/action-description/action-description.component.ts","module.exports = \"#background {\\r\\n  min-height: 100vh;\\r\\n  min-width: 100vw;\\r\\n  padding-top: 100px;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.stationNumber {\\r\\n  margin-right: 10px;\\r\\n  padding: 0 10px;\\r\\n  line-height: 30px;\\r\\n  border-radius: 50%;\\r\\n  background-color: #607d8b;\\r\\n  color: #eceff1;\\r\\n}\\r\\n\\r\\n#addStationForm {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-station/add-station.component.css\n// module id = ./src/app/add-station/add-station.component.css\n// module chunks = main","module.exports = \"<div id=\\\"background\\\" class=\\\"blue-grey lighten-5\\\">\\r\\n  <div class=\\\"container white z-depth-1\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col s12\\\">\\r\\n        <h1 class=\\\"center-align\\\">Parcel management</h1>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"container\\\" *ngIf=\\\"parcel\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"expandable\\\">\\r\\n            <li>\\r\\n              <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">receipt</i>General information</div>\\r\\n              <div class=\\\"collapsible-body\\\">\\r\\n                <table>\\r\\n                  <tbody>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Tracking number:</td>\\r\\n                    <td class=\\\"no-padding blue-grey-text\\\">{{parcel.trackingNumber}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Handover:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{convertToDate(parcel.handOverTimestamp)}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Parcel type:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.parcelTypeName}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li>\\r\\n              <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">location_city</i>Departure</div>\\r\\n              <div class=\\\"collapsible-body\\\">\\r\\n                <table>\\r\\n                  <tbody>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Person details:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.departurePersonDetails}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Road:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.departure.road}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">City:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.departure.city.name}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Country:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.departure.country}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </li>\\r\\n            <li>\\r\\n              <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">location_searching</i>Destination</div>\\r\\n              <div class=\\\"collapsible-body\\\">\\r\\n                <table>\\r\\n                  <tbody>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Person details:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.destinationPersonDetails}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Road:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.destination.road}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">City:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.destination.city.name}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Country:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{parcel.destination.country}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12 center\\\">\\r\\n          <h3>Stations</h3>\\r\\n          <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"expandable\\\">\\r\\n            <li *ngFor=\\\"let station of parcel.stations; let iStation = index;\\\">\\r\\n              <div class=\\\"collapsible-header valign-wrapper\\\">\\r\\n                <span class=\\\"stationNumber\\\">{{iStation + 1}}</span> {{parseActionDescription(station)}}\\r\\n              </div>\\r\\n              <div class=\\\"collapsible-body\\\">\\r\\n                <table>\\r\\n                  <tbody>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Timestamp:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{station.timestamp}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Transportation mode:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{station.transportationMode}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Notes:</td>\\r\\n                    <td class=\\\"no-padding\\\">\\r\\n                      <ng-container *ngIf=\\\"station.notes && station.notes.length > 0\\\">{{station.notes}}</ng-container>\\r\\n                      <ng-container *ngIf=\\\"!station.notes || station.notes.length == 0\\\">-</ng-container>\\r\\n                    </td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Road:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{station.location.road}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">City:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{station.location.city.name}}</td>\\r\\n                  </tr>\\r\\n                  <tr>\\r\\n                    <td class=\\\"bold-text no-padding\\\">Country:</td>\\r\\n                    <td class=\\\"no-padding\\\">{{station.location.country}}</td>\\r\\n                  </tr>\\r\\n                  </tbody>\\r\\n                </table>\\r\\n              </div>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <h4 class=\\\"center-align\\\">Add a new station</h4>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <form id=\\\"addStationForm\\\" (ngSubmit)=\\\"addStation(newStation);\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"input-field col s8 offset-s2\\\">\\r\\n                <select id=\\\"actionSelect\\\" materialize=\\\"material_select\\\" [materializeSelectOptions]=\\\"actionDescriptions\\\" (change)=\\\"actionChanged($event)\\\" class=\\\"validate\\\" required>\\r\\n                  <option value=\\\"\\\" disabled selected>Choose the action for the station</option>\\r\\n                  <option *ngFor=\\\"let action of actionDescriptions\\\" [value]=\\\"action\\\">{{action}}</option>\\r\\n                </select>\\r\\n                <label for=\\\"actionSelect\\\">Action description</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"input-field col s8 offset-s2\\\">\\r\\n                <select id=\\\"transportSelect\\\" materialize=\\\"material_select\\\" [materializeSelectOptions]=\\\"transportationModes\\\" (change)=\\\"transportChanged($event)\\\" class=\\\"validate\\\" required>\\r\\n                  <option value=\\\"\\\" disabled selected>Choose the transport for the station</option>\\r\\n                  <option *ngFor=\\\"let transport of transportationModes\\\" [value]=\\\"transport\\\">{{transport}}</option>\\r\\n                </select>\\r\\n                <label for=\\\"transportSelect\\\">Transportation mode</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"road\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"road\\\" [(ngModel)]=\\\"newStation.location.road\\\" required>\\r\\n                <label for=\\\"road\\\">Road</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s9\\\">\\r\\n                <input id=\\\"cityName\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"cityName\\\" [(ngModel)]=\\\"newStation.location.city.name\\\" required>\\r\\n                <label for=\\\"cityName\\\">City</label>\\r\\n              </div>\\r\\n              <div class=\\\"input-field col s3\\\">\\r\\n                <input id=\\\"zipCode\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"zipyCode\\\" [(ngModel)]=\\\"newStation.location.city.zipCode\\\" required>\\r\\n                <label for=\\\"zipCode\\\">ZIP</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"country\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"country\\\" [(ngModel)]=\\\"newStation.location.country\\\" required>\\r\\n                <label for=\\\"country\\\">Country</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"col s12\\\">\\r\\n                <button class=\\\"btn waves-effect waves-light right\\\" type=\\\"submit\\\" name=\\\"action\\\">Add station\\r\\n                  <i class=\\\"material-icons right\\\">add_to_photos</i>\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/add-station/add-station.component.html\n// module id = ./src/app/add-station/add-station.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Parcel, Station} from \"../data-objects/parcel-management\";\nimport {ParcelManagementService} from \"../services/parcel-management.service\";\nimport {ActivatedRoute, ParamMap} from \"@angular/router\";\nimport {HelperMethods} from \"../helper-methods\";\nimport {DataManagementService} from \"../services/data-management.service\";\n\n@Component({\n  selector: 'app-add-station',\n  templateUrl: './add-station.component.html',\n  styleUrls: ['./add-station.component.css']\n})\nexport class AddStationComponent implements OnInit {\n\n  public parcel: Parcel;\n  public newStation: Station;\n  public transportationModes: string[];\n  public actionDescriptions: string[];\n\n  constructor(private route: ActivatedRoute,\n              private parcelManagementService: ParcelManagementService,\n              private dataManagementService: DataManagementService) {}\n\n  ngOnInit() {\n    this.dataManagementService.listTransportationModes().subscribe(response => this.transportationModes = response);\n    this.dataManagementService.listActionDescriptions().subscribe(response => this.actionDescriptions = response);\n    this.updateParcel();\n    this.newStation = new Station();\n  }\n\n  public addStation(station: Station): void {\n    let success: boolean = true;\n    this.parcelManagementService.addStation(this.parcel.trackingNumber, station)\n      .catch(error => { success = false; return error}).subscribe(response => {\n      if (success) {\n        this.updateParcel();\n        this.newStation = new Station();\n      }\n    });\n  }\n\n  public actionChanged(selectedAction: any): void {\n      this.newStation.actionDescription = this.actionDescriptions[selectedAction.target.options.selectedIndex - 1];\n  }\n\n  public transportChanged(selectedTransport: any): void {\n      this.newStation.transportationMode = this.transportationModes[selectedTransport.target.options.selectedIndex - 1];\n  }\n\n  public convertToDate(timestamp: number) {\n    return new Date(timestamp);\n  }\n\n  public parseActionDescription(station: Station): string {\n    return HelperMethods.parseActionDescription(this.parcel, station);\n  }\n\n  //actions\n  private updateParcel(): void {\n    this.route.paramMap\n      .switchMap((params: ParamMap) =>\n        this.parcelManagementService.getParcel(params.get('trackingNumber')))\n      .subscribe(parcel => {\n        this.parcel = parcel;\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/add-station/add-station.component.ts","module.exports = \".nav-wrapper ul {\\r\\n  margin-right: 20px;\\r\\n}\\r\\n\\r\\nnav {\\r\\n  position: absolute;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n#backendNotRunning {\\r\\n  height: 100vh;\\r\\n  width: 100vw;\\r\\n  text-align: center;\\r\\n  vertical-align: middle;\\r\\n  line-height: 100vh;\\r\\n}\\r\\n\\r\\n#loading {\\r\\n  display: -webkit-box;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -webkit-box-align: center;\\r\\n      -ms-flex-align: center;\\r\\n          align-items: center;\\r\\n  -webkit-box-pack: center;\\r\\n      -ms-flex-pack: center;\\r\\n          justify-content: center;\\r\\n  height: 100vh;\\r\\n  width: 100vw;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<ng-container *ngIf=\\\"!showLoading && backendRunning\\\">\\r\\n  <nav class=\\\"transparent z-depth-0\\\" *ngIf=\\\"showNav\\\">\\r\\n    <div class=\\\"nav-wrapper\\\">\\r\\n      <ul class=\\\"right\\\">\\r\\n        <li *ngIf=\\\"showAdminButtons\\\"><a [routerLink]=\\\"['/staff']\\\" class=\\\"light-blue-text text-lighten-3\\\">Staff</a></li>\\r\\n        <li *ngIf=\\\"showAdminButtons\\\"><a [routerLink]=\\\"['/data']\\\" class=\\\"light-blue-text text-lighten-3\\\">Data</a></li>\\r\\n        <li *ngIf=\\\"showLoginButton\\\"><a [routerLink]=\\\"['/login']\\\" class=\\\"light-blue-text text-lighten-3\\\">Login</a></li>\\r\\n        <li *ngIf=\\\"showLogoutButton\\\"><a (click)=\\\"logout();\\\" class=\\\"light-blue-text text-lighten-3\\\">Logout</a></li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  <router-outlet></router-outlet>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"!showLoading && !backendRunning\\\">\\r\\n  <h1 id=\\\"backendNotRunning\\\" class=\\\"red-text text-darken-3 blue-grey lighten-5 no-margin\\\">The backend is not running</h1>\\r\\n</ng-container>\\r\\n<ng-container *ngIf=\\\"showLoading\\\">\\r\\n <div id=\\\"loading\\\">\\r\\n   <div class=\\\"preloader-wrapper big active\\\">\\r\\n     <div class=\\\"spinner-layer spinner-blue\\\">\\r\\n       <div class=\\\"circle-clipper left\\\">\\r\\n         <div class=\\\"circle\\\"></div>\\r\\n       </div><div class=\\\"gap-patch\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div><div class=\\\"circle-clipper right\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div>\\r\\n     </div>\\r\\n\\r\\n     <div class=\\\"spinner-layer spinner-red\\\">\\r\\n       <div class=\\\"circle-clipper left\\\">\\r\\n         <div class=\\\"circle\\\"></div>\\r\\n       </div><div class=\\\"gap-patch\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div><div class=\\\"circle-clipper right\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div>\\r\\n     </div>\\r\\n\\r\\n     <div class=\\\"spinner-layer spinner-yellow\\\">\\r\\n       <div class=\\\"circle-clipper left\\\">\\r\\n         <div class=\\\"circle\\\"></div>\\r\\n       </div><div class=\\\"gap-patch\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div><div class=\\\"circle-clipper right\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div>\\r\\n     </div>\\r\\n\\r\\n     <div class=\\\"spinner-layer spinner-green\\\">\\r\\n       <div class=\\\"circle-clipper left\\\">\\r\\n         <div class=\\\"circle\\\"></div>\\r\\n       </div><div class=\\\"gap-patch\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div><div class=\\\"circle-clipper right\\\">\\r\\n       <div class=\\\"circle\\\"></div>\\r\\n     </div>\\r\\n     </div>\\r\\n   </div>\\r\\n </div>\\r\\n</ng-container>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\r\nimport {NavigationStart, Router} from \"@angular/router\";\r\nimport 'rxjs/add/operator/filter';\r\nimport {AuthorizationService} from \"./services/authorization.service\";\r\nimport 'rxjs/add/operator/timeout'\r\n\r\ndeclare var Materialize: any;\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n\r\n  public showLoading: boolean = true;\r\n  public backendRunning: boolean = true;\r\n  public showLoginButton: boolean;\r\n  public showLogoutButton: boolean;\r\n  public showNav: boolean;\r\n  public showAdminButtons: boolean;\r\n  public showStaffButtons: boolean;\r\n\r\n  constructor(private router: Router, private authenticationService: AuthorizationService) {\r\n    router.events\r\n      .filter(event => event instanceof NavigationStart)\r\n      .subscribe((event: NavigationStart) => this.updateButtonVisibilities(event));\r\n    this.showPreloader();\r\n  }\r\n\r\n  //actions\r\n  private static isParcelDetailPage(event: NavigationStart): boolean {\r\n    return event.url.startsWith('/track');\r\n  }\r\n\r\n  private static isLoginPage(event: NavigationStart): boolean {\r\n    return event.url.startsWith('/login');\r\n  }\r\n\r\n  private isLoggedIn(): boolean {\r\n    return this.authenticationService.isAuthenticated();\r\n  }\r\n\r\n  public logout(): void {\r\n    this.authenticationService.logout();\r\n    this.showLoginButton = true;\r\n    this.showLogoutButton = false;\r\n    this.showStaffButtons = false;\r\n    this.showAdminButtons = false;\r\n    this.routeToIndex();\r\n    Materialize.toast(\"Successfully logged out.\", 3000, \"\");\r\n  }\r\n\r\n  private routeToIndex(): void {\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  private updateButtonVisibilities(event: NavigationStart) {\r\n    this.showLoginButton = !AppComponent.isLoginPage(event) && !this.isLoggedIn();\r\n    this.showLogoutButton = !AppComponent.isLoginPage(event) && this.isLoggedIn();\r\n    this.showNav = !AppComponent.isParcelDetailPage(event);\r\n    if (this.isLoggedIn()) {\r\n      this.authenticationService.isAdmin().subscribe(isAdmin => this.showAdminButtons = isAdmin);\r\n      this.authenticationService.isStaff().subscribe(isStaff => this.showStaffButtons = isStaff);\r\n    }\r\n  }\r\n\r\n  private showPreloader(): void {\r\n    this.authenticationService.isBackendRunning()\r\n      .timeout(3000)\r\n      .catch(error => {\r\n        this.backendRunning = false;\r\n        this.showLoading = false;\r\n        return [];\r\n      }).subscribe(response => this.showLoading = false);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {MaterializeModule} from \"angular2-materialize\";\r\nimport {AppRoutesModule} from \"./routing/app.routes\";\r\nimport { LoginComponent } from './login/login.component';\r\nimport {FormsModule} from \"@angular/forms\";\r\nimport {CookieModule} from \"ngx-cookie\";\r\nimport {AuthorizationService} from \"./services/authorization.service\";\r\nimport {HttpModule} from \"@angular/http\";\r\nimport { HomeComponent } from './home/home.component';\r\nimport { CreateParcelComponent } from './create-parcel/create-parcel.component';\r\nimport {ParcelManagementService} from \"./services/parcel-management.service\";\r\nimport { StaffManagementComponent } from './staff-management/staff-management.component';\r\nimport {AuthGuard} from \"./routing/auth.guard\";\r\nimport {StaffManagementService} from \"./services/staff-management.service\";\r\nimport { ParcelDetailsComponent } from './parcel-details/parcel-details.component';\r\nimport {NguiMapModule} from \"@ngui/map\";\r\nimport {VerticalTimelineModule} from \"angular-vertical-timeline\";\r\nimport { DataManagementComponent } from './data-management/data-management.component';\r\nimport {DataManagementService} from \"./services/data-management.service\";\r\nimport { ParcelTypeComponent } from './parcel-type/parcel-type.component';\r\nimport { ActionDescriptionComponent } from './action-description/action-description.component';\r\nimport { TransportationModeComponent } from './transportation-mode/transportation-mode.component';\nimport { AddStationComponent } from './add-station/add-station.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    CreateParcelComponent,\r\n    StaffManagementComponent,\r\n    ParcelDetailsComponent,\r\n    DataManagementComponent,\r\n    ParcelTypeComponent,\r\n    ActionDescriptionComponent,\r\n    TransportationModeComponent,\r\n    AddStationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    CookieModule.forRoot(),\r\n    FormsModule,\r\n    HttpModule,\r\n    MaterializeModule,\r\n    AppRoutesModule,\r\n    NguiMapModule.forRoot({apiUrl: 'https://maps.google.com/maps/api/js?key=AIzaSyCQLhnDxhB2Gb7CRWLlZvWcYdEqK0GqseI'}),\r\n    VerticalTimelineModule\r\n  ],\r\n  providers: [\r\n    AuthorizationService,\r\n    AuthGuard,\r\n    DataManagementService,\r\n    ParcelManagementService,\r\n    StaffManagementService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"#createNewParcelWrapper {\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  display: table-cell;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n#container {\\r\\n  width: 1000px;\\r\\n}\\r\\n\\r\\n.card-panel {\\r\\n  padding: 10px 30px;\\r\\n}\\r\\n\\r\\n#parcelImage {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n#submitButton {\\r\\n  background-color: #6699CC;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-parcel/create-parcel.component.css\n// module id = ./src/app/create-parcel/create-parcel.component.css\n// module chunks = main","module.exports = \"<div id=\\\"createNewParcelWrapper\\\">\\r\\n  <div class=\\\"row\\\" id=\\\"container\\\">\\r\\n    <div class=\\\"col s12 card-panel z-depth-2 blue-grey lighten-5 center\\\">\\r\\n      <form (ngSubmit)=\\\"onSubmit()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col s12\\\">\\r\\n            <h2 class=\\\"center-align blue-grey-text\\\">Create a new parcel</h2>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col s12 center\\\">\\r\\n            <img id=\\\"parcelImage\\\" src=\\\"../../assets/images/new-parcel.png\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"input-field col s8 offset-s2\\\">\\r\\n            <select id=\\\"parcelTypeSelect\\\" materialize=\\\"material_select\\\" [materializeSelectOptions]=\\\"parcelTypeNames\\\" (change)=\\\"parcelTypeChanged($event)\\\" class=\\\"validate\\\" required>\\r\\n              <option value=\\\"\\\" disabled selected>Choose the type of your parcel</option>\\r\\n              <option *ngFor=\\\"let parcelTypeName of parcelTypeNames\\\" [value]=\\\"parcelTypeName\\\">{{parcelTypeName}}</option>\\r\\n            </select>\\r\\n            <label for=\\\"parcelTypeSelect\\\">Parcel type</label>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row valign-wrapper\\\">\\r\\n          <div class=\\\"col s5\\\">\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <p class=\\\"center-align\\\">Departure</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"departurePerson\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"departurePerson\\\" [(ngModel)]=\\\"parcel.departurePersonDetails\\\" required>\\r\\n                <label for=\\\"departurePerson\\\">Person</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"departureRoad\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"departureRoad\\\" [(ngModel)]=\\\"parcel.departure.road\\\" required>\\r\\n                <label for=\\\"departureRoad\\\">Road</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s9\\\">\\r\\n                <input id=\\\"departureCityName\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"departureCityName\\\" [(ngModel)]=\\\"parcel.departure.city.name\\\" required>\\r\\n                <label for=\\\"departureCityName\\\">City</label>\\r\\n              </div>\\r\\n              <div class=\\\"input-field col s3\\\">\\r\\n                <input id=\\\"departureZipCode\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"departureZipCode\\\" [(ngModel)]=\\\"parcel.departure.city.zipCode\\\" required>\\r\\n                <label for=\\\"departureZipCode\\\">ZIP</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"departureCountry\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"departureCountry\\\" [(ngModel)]=\\\"parcel.departure.country\\\" required>\\r\\n                <label for=\\\"departureCountry\\\">Country</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"col s2\\\">\\r\\n            <i class=\\\"material-icons large center-align\\\" style=\\\"color: #6699CC;\\\">keyboard_arrow_right</i>\\r\\n          </div>\\r\\n          <div class=\\\"col s5\\\">\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <p class=\\\"center-align\\\">Destination</p>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"destinationPerson\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"destinationPerson\\\" [(ngModel)]=\\\"parcel.destinationPersonDetails\\\" required>\\r\\n                <label for=\\\"destinationPerson\\\">Person</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"destinationRoad\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"destinationRoad\\\" [(ngModel)]=\\\"parcel.destination.road\\\" required>\\r\\n                <label for=\\\"destinationRoad\\\">Road</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s9\\\">\\r\\n                <input id=\\\"destinationCityName\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"destinationCityName\\\" [(ngModel)]=\\\"parcel.destination.city.name\\\" required>\\r\\n                <label for=\\\"destinationCityName\\\">City</label>\\r\\n              </div>\\r\\n              <div class=\\\"input-field col s3\\\">\\r\\n                <input id=\\\"destinationZipCode\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"destinationZipCode\\\" [(ngModel)]=\\\"parcel.destination.city.zipCode\\\" required>\\r\\n                <label for=\\\"destinationZipCode\\\">ZIP</label>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row no-margin\\\">\\r\\n              <div class=\\\"input-field col s12\\\">\\r\\n                <input id=\\\"destinationCountry\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"destinationCountry\\\" [(ngModel)]=\\\"parcel.destination.country\\\" required>\\r\\n                <label for=\\\"destinationCountry\\\">Country</label>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin: 40px 0;\\\">\\r\\n          <div class=\\\"col s12 center\\\">\\r\\n            <button id=\\\"submitButton\\\" class=\\\"btn waves-effect waves-light\\\" type=\\\"submit\\\" name=\\\"action\\\">\\r\\n              <i class=\\\"material-icons left\\\">add</i> Generate tracking number\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/create-parcel/create-parcel.component.html\n// module id = ./src/app/create-parcel/create-parcel.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\nimport {Parcel} from \"../data-objects/parcel-management\";\nimport {ParcelManagementService} from \"../services/parcel-management.service\";\nimport {Router} from \"@angular/router\";\nimport {DataManagementService} from \"../services/data-management.service\";\n\n@Component({\n  selector: 'app-create-parcel',\n  templateUrl: './create-parcel.component.html',\n  styleUrls: ['./create-parcel.component.css']\n})\nexport class CreateParcelComponent implements OnInit {\n\n  public parcelTypeNames: string[];\n  public parcel: Parcel;\n\n  constructor(private router: Router,\n              private parcelManagementService: ParcelManagementService,\n              private dataManagementService: DataManagementService) {}\n\n  ngOnInit() {\n    this.parcel = new Parcel();\n    this.dataManagementService.listParcelTypes().subscribe(response => this.parcelTypeNames = response);\n  }\n\n  public parcelTypeChanged(selectedType: any): void {\n    this.parcel.parcelTypeName = this.parcelTypeNames[selectedType.target.options.selectedIndex - 1];\n  }\n\n  public onSubmit(): void {\n    this.parcelManagementService\n      .createParcel(this.parcel)\n      .subscribe(trackingNumber => {\n        if (trackingNumber) {\n          this.router.navigate(['track', trackingNumber]);\n        }\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/create-parcel/create-parcel.component.ts","module.exports = \"#background {\\r\\n  min-height: 100vh;\\r\\n  min-width: 100vw;\\r\\n  padding-top: 100px;\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-management/data-management.component.css\n// module id = ./src/app/data-management/data-management.component.css\n// module chunks = main","module.exports = \"<div id=\\\"background\\\" class=\\\"blue-grey lighten-5\\\">\\n  <div class=\\\"container white z-depth-1\\\">\\n    <div class=\\\"section\\\">\\n      <app-parcel-type></app-parcel-type>\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <div class=\\\"section\\\">\\n      <app-action-description></app-action-description>\\n    </div>\\n    <div class=\\\"divider\\\"></div>\\n    <div class=\\\"section\\\">\\n      <app-transportation-mode></app-transportation-mode>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/data-management/data-management.component.html\n// module id = ./src/app/data-management/data-management.component.html\n// module chunks = main","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-data-management',\n  templateUrl: './data-management.component.html',\n  styleUrls: ['./data-management.component.css']\n})\nexport class DataManagementComponent {\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-management/data-management.component.ts","export class StaffMember {\r\n  department: string;\r\n  foreName: string;\r\n  lastName: string;\r\n  email: string;\r\n  id: string;\r\n  password: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-objects/authorization.ts","export class Location {\r\n  city: City;\r\n  country: string;\r\n  road: string;\r\n  constructor() {\r\n    this.city = new City();\r\n  }\r\n}\r\n\r\nexport class City {\r\n  name: string;\r\n  zipCode: string;\r\n}\r\n\r\nexport class Parcel {\r\n  stations?: Station[];\r\n  departure: Location;\r\n  destination: Location;\r\n  trackingNumber?: string;\r\n  parcelTypeName: string;\r\n  departurePersonDetails: string;\r\n  destinationPersonDetails: string;\r\n  handOverTimestamp: number;\r\n\r\n  constructor() {\r\n    this.departure = new Location();\r\n    this.destination = new Location();\r\n  }\r\n}\r\n\r\nexport class Station {\r\n  location: Location;\r\n  actionDescription: string;\r\n  notes: string;\r\n  transportationMode: string;\r\n  timestamp: number;\r\n\r\n  constructor() {\r\n    this.location = new Location();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/data-objects/parcel-management.ts","import {Response} from \"@angular/http\";\r\nimport {AuthorizationService} from \"./services/authorization.service\";\r\nimport {Parcel, Station} from \"./data-objects/parcel-management\";\r\n\r\ndeclare var Materialize: any;\r\n\r\nexport class HelperMethods {\r\n\r\n  constructor(private authorizationService: AuthorizationService) {}\r\n\r\n  public static extractData(res: Response) {\r\n    let body = res.json();\r\n    return body || {};\r\n  }\r\n\r\n  public handleError(error: any) {\r\n    let errMsg = (error.message) ? error.message : (error._body) ? JSON.parse(error._body).message : 'Server error';\r\n    console.error(error);\r\n    if (errMsg == 'Authorization token expired') {\r\n      this.authorizationService.logout();\r\n    }\r\n    Materialize.toast(errMsg, 3000, \"\");\r\n    return error;\r\n  }\r\n\r\n  public static generateInitialPassword(): string {\r\n    return Math.random().toString(36).slice(-8);\r\n  }\r\n\r\n  public static parseActionDescription(parcel: Parcel, station: Station): string {\r\n    let parsedActionDescription: string = station.actionDescription;\r\n    parsedActionDescription = parsedActionDescription.replace(\"#Location#\", station.location.city.name + ', ' + station.location.country);\r\n    parsedActionDescription = parsedActionDescription.replace(\"#Transport#\", station.transportationMode);\r\n    parsedActionDescription = parsedActionDescription.replace(\"#DeparturePerson#\", parcel.departurePersonDetails);\r\n    parsedActionDescription = parsedActionDescription.replace(\"#DestinationPerson#\", parcel.destinationPersonDetails);\r\n    parsedActionDescription = parsedActionDescription.replace(\"#NoteOrPerson#\",\r\n      station.notes ? station.notes : parcel.departurePersonDetails);\r\n    return parsedActionDescription;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/helper-methods.ts","module.exports = \"#searchContainer {\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  max-width: 960px;\\r\\n}\\r\\n\\r\\n.input-field {\\r\\n  padding-left: 10px;\\r\\n  padding-right: 40px;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.input-field label {\\r\\n  right: 0;\\r\\n  left: unset;\\r\\n}\\r\\n\\r\\n#searchIcon {\\r\\n  margin-right: 10px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n#bodySection {\\r\\n  min-height: calc(100vh - 500px);\\r\\n  height: 100%;\\r\\n  padding-top: 70px;\\r\\n}\\r\\n\\r\\n.divider {\\r\\n  margin: 70px 0;\\r\\n}\\r\\n\\r\\n.btn-floating.btn-large {\\r\\n  width: 150px;\\r\\n  height: 150px;\\r\\n}\\r\\n\\r\\n.btn-floating.btn-large i {\\r\\n  line-height: 150px;\\r\\n}\\r\\n\\r\\n.btn-large i {\\r\\n  font-size: 120px;\\r\\n}\\r\\n\\r\\n#createNewSection {\\r\\n  display: none;\\r\\n  min-height: 100vh;\\r\\n  min-width: 100vw;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"parallax-container\\\">\\r\\n  <div materialize=\\\"parallax\\\" class=\\\"parallax\\\"><img src=\\\"../../assets/images/background-1.png\\\"></div>\\r\\n</div>\\r\\n<section id=\\\"bodySection\\\" class=\\\"blue-grey lighten-5\\\">\\r\\n  <section id=\\\"searchSection\\\">\\r\\n    <div id=\\\"searchContainer\\\" class=\\\"container\\\">\\r\\n      <form (ngSubmit)=\\\"onSubmit()\\\" class=\\\"white\\\" #searchForm>\\r\\n        <div class=\\\"input-field\\\">\\r\\n          <input #search id=\\\"search\\\" type=\\\"search\\\" placeholder=\\\"Enter your tracking number\\\" (focus)=\\\"hideCreateNewSection();\\\" required>\\r\\n          <label id=\\\"searchIcon\\\" class=\\\"label-icon\\\" for=\\\"search\\\">\\r\\n            <i class=\\\"material-icons\\\">search</i>\\r\\n          </label>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </section>\\r\\n  <div class=\\\"container\\\">\\r\\n    <div class=\\\"divider\\\"></div>\\r\\n  </div>\\r\\n  <section id=\\\"chooseNewSection\\\">\\r\\n    <div class=\\\"container center\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <a class=\\\"btn btn-floating btn-large blue-grey pulse\\\" (click)=\\\"showCreateNewSection();\\\">\\r\\n            <i class=\\\"material-icons blue-grey-text text-lighten-5\\\">fiber_new</i>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </section>\\r\\n</section>\\r\\n<section id=\\\"createNewSection\\\" class=\\\"blue-grey\\\" #createNewSection>\\r\\n  <app-create-parcel></app-create-parcel>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import {Component, ElementRef, ViewChild} from '@angular/core';\n\nimport * as $ from 'jquery';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  @ViewChild ('search') private search: ElementRef;\n  @ViewChild('createNewSection') private createNewSection: ElementRef;\n\n  constructor(private router: Router) { }\n\n  public onSubmit(): void {\n    this.router.navigate(['track', this.search.nativeElement.value]);\n  }\n\n  public showCreateNewSection(): void {\n    this.createNewSection.nativeElement.style.display = 'block';\n    $(\"html, body\").animate({ scrollTop: $('#createNewSection').offset().top }, 1000);\n  }\n\n  public hideCreateNewSection(): void {\n    this.createNewSection.nativeElement.style.display = 'none';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"#background {\\r\\n  background-size: cover;\\r\\n  background: url('background-1.d6e56fcd252313bd8c0b.png') no-repeat center center;\\r\\n  width: 100vw;\\r\\n  height: 100vh;\\r\\n  display: table-cell;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n#trackingImage {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n#container {\\r\\n  width: 350px;\\r\\n}\\r\\n\\r\\n.card-panel {\\r\\n  padding: 50px 30px;\\r\\n}\\r\\n\\r\\n#loginButton {\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\n#wrongCredentials {\\r\\n  display: none;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div id=\\\"background\\\">\\n  <div class=\\\"row\\\" id=\\\"container\\\">\\n    <div class=\\\"col s12 card-panel z-depth-2 blue-grey lighten-5\\\">\\n      <form (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"row center\\\">\\n          <img id=\\\"trackingImage\\\" src=\\\"../../assets/images/tracking-icon.png\\\">\\n        </div>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"validate\\\" name=\\\"email\\\" [(ngModel)]=\\\"email\\\" required>\\n            <label for=\\\"email\\\">Email</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"password\\\" type=\\\"password\\\" class=\\\"validate\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\" required>\\n            <label for=\\\"password\\\">Password</label>\\n          </div>\\n        </div>\\n        <div class=\\\"row center\\\" id=\\\"wrongCredentials\\\" #wrongCredentialAlert>\\n          <span class=\\\"red-text text-darken-3\\\">Wrong username or password</span>\\n        </div>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"col s12\\\">\\n            <button class=\\\"btn waves-effect waves-light right\\\" id=\\\"loginButton\\\" type=\\\"submit\\\" name=\\\"action\\\">\\n              <i class=\\\"material-icons left\\\">lock_open</i> Login\\n            </button>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {AuthorizationService} from \"../services/authorization.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  @ViewChild('wrongCredentialAlert') private wrongCredentialAlert : ElementRef;\n\n  public email: string;\n  public password: string;\n  private returnUrl: string;\n\n  constructor(private authenticationService: AuthorizationService,\n              private router: Router,\n              private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '';\n    let isAuthorized = this.authenticationService.isAuthenticated();\n    if (isAuthorized) {\n      this.routeToPrevPage();\n    }\n  }\n\n  public onSubmit(): void {\n    this.authenticationService\n      .login(this.email, this.password)\n      .subscribe(response => {\n        if (response) {\n          this.hideWrongCredentialsAlert();\n          this.routeToPrevPage();\n        } else {\n          this.showWrongCredentialsAlert();\n        }\n      });\n  }\n\n  private routeToPrevPage(): void {\n    this.router.navigateByUrl(this.returnUrl);\n  }\n\n  private showWrongCredentialsAlert(): void {\n    this.wrongCredentialAlert.nativeElement.style.display = 'inherit';\n  }\n\n  private hideWrongCredentialsAlert(): void {\n    this.wrongCredentialAlert.nativeElement.style.display = 'none';\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \"ngui-map {\\r\\n  height: 50vh;\\r\\n}\\r\\n\\r\\n#background {\\r\\n  padding-top: 20px;\\r\\n  min-height: 100vh;\\r\\n  height: 100%;\\r\\n  width: 100vw;\\r\\n}\\r\\n\\r\\n.counterMarker {\\r\\n  height: 30px;\\r\\n  width: 30px;\\r\\n  font-size: 1.2rem;\\r\\n  padding: 0 10px;\\r\\n  line-height: 30px;\\r\\n  border-radius: 50%;\\r\\n  background-color: #95a5a6;\\r\\n  color: #eceff1;\\r\\n}\\r\\n\\r\\n.counterMarker i {\\r\\n  font-size: 1.2rem;\\r\\n  margin-left: -4px;\\r\\n  line-height: 30px;\\r\\n}\\r\\n\\r\\n.counterMarker.disabled {\\r\\n  opacity: 0.6;\\r\\n}\\r\\n\\r\\n.counterMarker.pulse {\\r\\n  opacity: 1.0;\\r\\n}\\r\\n\\r\\n#progress {\\r\\n  font-size: 2rem;\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntd {\\r\\n  padding: 5px;\\r\\n  vertical-align: top;\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n#trackingNumber {\\r\\n  font-size: 2rem;\\r\\n  vertical-align: middle;\\r\\n  margin-left: 50px;\\r\\n}\\r\\n\\r\\n#timelineCard {\\r\\n  height: calc(100vh - 270px);\\r\\n  overflow-y: scroll;\\r\\n}\\r\\n\\r\\n.collapsible-body {\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n#shipmentDetails {\\r\\n  height: calc(100vh - 540px);\\r\\n}\\r\\n\\r\\n/* Time line component has to be styled in styles.scss */\\r\\n\\r\\n/*\\r\\n  Vertical time line component styling\\r\\n  adopted from https://codyhouse.co/demo/vertical-timeline/index.html\\r\\n */\\r\\n\\r\\n::ng-deep vertical-timeline .timeline {\\r\\n  position: relative !important;\\r\\n  padding: 2em 0 !important;\\r\\n  margin-top: 5em !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline::before {\\r\\n  content: '' !important;\\r\\n  position: absolute !important;\\r\\n  top: 0 !important;\\r\\n  left: 18px !important;\\r\\n  height: calc(100% - 160px) !important;\\r\\n  width: 4px !important;\\r\\n  background: #d7e4ed;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline > div {\\r\\n  margin-top: -90px !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-item:after {\\r\\n  content: \\\"\\\" !important;\\r\\n  display: table !important;\\r\\n  clear: both !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-item:first-child {\\r\\n  margin-top: 0 !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-item:last-child {\\r\\n  margin-bottom: 0 !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-img {\\r\\n  width: 60px !important;\\r\\n  height: 60px !important;\\r\\n  margin-left: -30px !important;\\r\\n  /* Force Hardware Acceleration in WebKit */\\r\\n  -webkit-transform: translateZ(0) !important;\\r\\n  -webkit-backface-visibility: hidden !important;\\r\\n  position: relative !important;\\r\\n  top: 0 !important;\\r\\n  left: 20px !important;\\r\\n  border-radius: 50% !important;\\r\\n  text-align: center;\\r\\n  background-color: #b0bec5 !important;\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 1170px) {\\r\\n  ::ng-deep vertical-timeline .timeline-img {\\r\\n    font-size: 17px;\\r\\n  }\\r\\n  ::ng-deep vertical-timeline .timeline-img p {\\r\\n    padding-top: 18px !important;\\r\\n  }\\r\\n  ::ng-deep vertical-timeline .cssanimations .timeline-img.is-hidden {\\r\\n    visibility: hidden !important;\\r\\n  }\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content {\\r\\n  position: relative !important;\\r\\n  margin-left: 60px !important;\\r\\n  background: white !important;\\r\\n  border-radius: 0.25em !important;\\r\\n  padding: 1em !important;\\r\\n  -webkit-box-shadow: 0 3px 0 #d7e4ed !important;\\r\\n          box-shadow: 0 3px 0 #d7e4ed !important;\\r\\n  margin-top: -60px;\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content:after {\\r\\n  content: \\\"\\\" !important;\\r\\n  display: table !important;\\r\\n  clear: both !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content h2 {\\r\\n  color: #303e49 !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content p, .timeline-content .date {\\r\\n  font-size: 0.8125rem !important;\\r\\n  color: #607d8b !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content .date {\\r\\n  display: inline-block !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content p {\\r\\n  margin: 0 !important;\\r\\n  line-height: 1.6 !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content .date {\\r\\n  float: left !important;\\r\\n  padding: 0 !important;\\r\\n  opacity: .7 !important;\\r\\n  background: none !important;\\r\\n}\\r\\n\\r\\n::ng-deep vertical-timeline .timeline-content::before {\\r\\n  top: 24px !important;\\r\\n  left: auto !important;\\r\\n  right: 100% !important;\\r\\n  border-color: transparent !important;\\r\\n  content: '' !important;\\r\\n  position: absolute !important;\\r\\n  height: 0 !important;\\r\\n  width: 0 !important;\\r\\n  border: 7px solid transparent !important;\\r\\n  border-right-color: white !important;\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 768px) {\\r\\n  ::ng-deep vertical-timeline .timeline-content h2 {\\r\\n    font-size: 1.25rem !important;\\r\\n  }\\r\\n  ::ng-deep vertical-timeline .timeline-content p {\\r\\n    font-size: 2rem !important;\\r\\n  }\\r\\n  ::ng-deep vertical-timeline .timeline-content .date {\\r\\n    font-size: 0.875rem !important;\\r\\n  }\\r\\n}\\r\\n\\r\\n.amber {\\r\\n  background-color: #f1c40f !important;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/parcel-details/parcel-details.component.css\n// module id = ./src/app/parcel-details/parcel-details.component.css\n// module chunks = main","module.exports = \"<div id=\\\"background\\\" class=\\\"blue-grey lighten-5\\\" *ngIf=\\\"parcel\\\">\\r\\n  <div class=\\\"row no-margin\\\">\\r\\n    <div class=\\\"col s5\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <div class=\\\"card-panel blue-grey z-depth-1 no-margin\\\">\\r\\n            <a [routerLink]=\\\"['']\\\" class=\\\"btn blue-grey lighten-4 blue-grey-text\\\" data-delay=\\\"50\\\">\\r\\n              <i class=\\\"material-icons medium left blue-grey-text\\\">chevron_left</i>Back\\r\\n            </a>\\r\\n            <span id=\\\"trackingNumber\\\" class=\\\"white-text\\\">Shipment: {{parcel.trackingNumber}}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <div class=\\\"card-panel z-depth-1 no-margin center\\\" [ngClass]=\\r\\n            \\\"{'green': parcel.stations[0].actionDescription == 'Parcel got delivered and was taken from #NoteOrPerson#',\\r\\n                'amber': parcel.stations[0].actionDescription != 'Parcel got delivered and was taken from #NoteOrPerson#'}\\\">\\r\\n            <span id=\\\"progress\\\" class=\\\"white-text\\\">\\r\\n              {{parseActionDescription(parcel.stations[0])}}\\r\\n            </span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <div id=\\\"timelineCard\\\" class=\\\"card-panel blue-grey z-depth-0 no-margin\\\">\\r\\n            <div class=\\\"row\\\" *ngIf=\\\"showAddStationButton\\\">\\r\\n              <div class=\\\"col s12 center\\\">\\r\\n                <a [routerLink]=\\\"['/parcelManagement', parcel.trackingNumber]\\\" class=\\\"btn\\\">Add a station</a>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col s12\\\">\\r\\n                <vertical-timeline style=\\\"overflow-y: scroll;\\\">\\r\\n                  <vertical-timeline-card *ngFor=\\\"let station of parcel.stations.reverse()\\\" [dateValue]=\\\"station.timestamp\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n                      <div class=\\\"col s12\\\">\\r\\n                        <h2>{{parseActionDescription(station)}}</h2>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                  </vertical-timeline-card>\\r\\n                </vertical-timeline>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col s7\\\" style=\\\"padding-right: 30px;\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <ngui-map #map [options]=\\\"mapOptions\\\" (mapReady$)=\\\"onMapReady($event)\\\">\\r\\n            <custom-marker *ngFor=\\\"let address of addresses; let iAddress = index\\\"\\r\\n                           [position]=\\\"address\\\"\\r\\n                           (initialized$)=\\\"onMarkerInit($event);\\\">\\r\\n              <div class=\\\"counterMarker\\\" [ngClass]=\\\"{'pulse': iAddress == addresses.length - 2, 'disabled' : iAddress > 0 && iAddress < addresses.length - 2}\\\">\\r\\n                <ng-container *ngIf=\\\"iAddress == 0\\\"><i class=\\\"material-icons\\\">receipt</i></ng-container>\\r\\n                <ng-container *ngIf=\\\"iAddress > 0 && iAddress < addresses.length - 1\\\">{{iAddress}}</ng-container>\\r\\n                <ng-container *ngIf=\\\"iAddress == addresses.length - 1\\\"><i class=\\\"material-icons\\\">location_searching</i></ng-container>\\r\\n              </div>\\r\\n            </custom-marker>\\r\\n            <polyline *ngIf=\\\"positions\\\" [editable]=\\\"false\\\"\\r\\n                      [path]=\\\"filterStationPositions(positions)\\\"\\r\\n                      [geodesic]=\\\"true\\\"\\r\\n                      [strokeColor]=\\\"'#a5d6a7'\\\"\\r\\n                      [strokeOpacity]=\\\"1\\\"\\r\\n                      [strokeWeight]=\\\"2\\\"></polyline>\\r\\n          </ngui-map>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n          <div id=\\\"shipmentDetails\\\" class=\\\"card-panel blue-grey z-depth-0 no-margin\\\">\\r\\n            <h5 class=\\\"white-text\\\">Shipment details</h5>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col s12\\\">\\r\\n                <ul materialize=\\\"collapsible\\\" class=\\\"collapsible\\\" data-collapsible=\\\"accordion\\\">\\r\\n                  <li>\\r\\n                    <div class=\\\"collapsible-header active\\\"><i class=\\\"material-icons\\\">receipt</i>General information</div>\\r\\n                    <div class=\\\"collapsible-body\\\">\\r\\n                      <table class=\\\"striped\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Tracking number:</td>\\r\\n                          <td class=\\\"no-padding blue-grey-text\\\">{{parcel.trackingNumber}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Handover:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{convertToDate(parcel.handOverTimestamp)}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Parcel type:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.parcelTypeName}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">location_city</i>Departure</div>\\r\\n                    <div class=\\\"collapsible-body\\\">\\r\\n                      <table class=\\\"striped\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Person details:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.departurePersonDetails}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Road:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.departure.road}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">City:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.departure.city.name}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Country:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.departure.country}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                  <li>\\r\\n                    <div class=\\\"collapsible-header\\\"><i class=\\\"material-icons\\\">location_searching</i>Destination</div>\\r\\n                    <div class=\\\"collapsible-body\\\">\\r\\n                      <table class=\\\"striped\\\">\\r\\n                        <tbody>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Person details:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.destinationPersonDetails}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Road:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.destination.road}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">City:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.destination.city.name}}</td>\\r\\n                        </tr>\\r\\n                        <tr>\\r\\n                          <td class=\\\"bold-text no-padding\\\">Country:</td>\\r\\n                          <td class=\\\"no-padding\\\">{{parcel.destination.country}}</td>\\r\\n                        </tr>\\r\\n                        </tbody>\\r\\n                      </table>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/parcel-details/parcel-details.component.html\n// module id = ./src/app/parcel-details/parcel-details.component.html\n// module chunks = main","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\r\nimport {Parcel, Station} from \"../data-objects/parcel-management\";\r\nimport {ParcelManagementService} from \"../services/parcel-management.service\";\r\nimport 'rxjs/add/operator/switchMap';\r\nimport MapOptions = google.maps.MapOptions;\r\nimport {HelperMethods} from \"../helper-methods\";\r\nimport {Observable} from \"rxjs/Observable\";\r\nimport GeocoderResult = google.maps.GeocoderResult;\r\nimport \"rxjs/add/observable/forkJoin\";\r\nimport \"rxjs/add/observable/of\";\r\nimport {AuthorizationService} from \"../services/authorization.service\";\r\nimport \"rxjs/add/operator/zip\";\r\n\r\ndeclare var google: any;\r\n\r\n@Component({\r\n  selector: 'app-parcel-details',\r\n  templateUrl: './parcel-details.component.html',\r\n  styleUrls: ['./parcel-details.component.css']\r\n})\r\nexport class ParcelDetailsComponent implements OnInit {\r\n\r\n  @ViewChild('map')\r\n  private mapComponent: any;\r\n\r\n  public addresses: string[];\r\n  public mapOptions: MapOptions = {\r\n    center: {lat: 52.040055, lng: 8.540920},\r\n    maxZoom: 17,\r\n    minZoom: 4,\r\n    zoom: 13,\r\n    disableDefaultUI: true,\r\n    fullscreenControl: true,\r\n    zoomControl: true,\r\n    styles: [{\r\n      \"featureType\": \"all\",\r\n      \"elementType\": \"geometry.fill\",\r\n      \"stylers\": [{\r\n        \"weight\": 2.00\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"all\",\r\n      \"elementType\": \"geometry.stroke\",\r\n      \"stylers\": [{\r\n        \"color\": \"#9c9c9c\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"all\",\r\n      \"elementType\": \"labels.text\",\r\n      \"stylers\": [{\r\n        \"visibility\": \"on\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"landscape\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"color\": \"#f2f2f2\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"landscape\",\r\n      \"elementType\": \"geometry.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#ffffff\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"landscape.man_made\",\r\n      \"elementType\": \"geometry.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#ffffff\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"poi\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"visibility\": \"off\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"saturation\": -100\r\n      }, {\r\n        \"lightness\": 45\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"geometry.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#eeeeee\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#7b7b7b\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road\",\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [{\r\n        \"color\": \"#ffffff\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road.highway\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"visibility\": \"simplified\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"road.arterial\",\r\n      \"elementType\": \"labels.icon\",\r\n      \"stylers\": [{\r\n        \"visibility\": \"off\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"transit\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"visibility\": \"off\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"all\",\r\n      \"stylers\": [{\r\n        \"color\": \"#46bcec\"\r\n      }, {\r\n        \"visibility\": \"on\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"geometry.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#c8d7d4\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.fill\",\r\n      \"stylers\": [{\r\n        \"color\": \"#070707\"\r\n      }\r\n      ]\r\n    }, {\r\n      \"featureType\": \"water\",\r\n      \"elementType\": \"labels.text.stroke\",\r\n      \"stylers\": [{\r\n        \"color\": \"#ffffff\"\r\n      }\r\n      ]\r\n    }\r\n    ]\r\n\r\n  };\r\n  public parcel: Parcel;\r\n  public positions: any[];\r\n  public showAddStationButton: boolean = false;\r\n\r\n  constructor(private router: Router,\r\n              private route: ActivatedRoute,\r\n              private authorizationService: AuthorizationService,\r\n              private parcelManagementService: ParcelManagementService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadParcel();\r\n    this.updateShowAddStationButton();\r\n  }\r\n\r\n  public onMapReady(map): void {\r\n    this.loadPositions();\r\n  }\r\n\r\n  public onMarkerInit(marker): void {\r\n    const bounds = new google.maps.LatLngBounds();\r\n    this.positions.forEach(marker => bounds.extend(marker));\r\n    this.mapComponent.map.fitBounds(bounds);\r\n  }\r\n\r\n  public parseActionDescription(station: Station): string {\r\n    return HelperMethods.parseActionDescription(this.parcel, station);\r\n  }\r\n\r\n  public convertToDate(timestamp: number) {\r\n    return new Date(timestamp);\r\n  }\r\n\r\n  public filterStationPositions(positions: any[]) {\r\n    return positions.filter((position, index) => index > 0 && index < positions.length - 1)\r\n  }\r\n\r\n  private loadPositions(): void {\r\n    if (typeof(google) == 'undefined' || !this.mapComponent) { return; }\r\n    let addresses = this.buildAddressArrayForStations();\r\n    let geoObservables = this.prepareAddressTranslation(addresses);\r\n    Observable.forkJoin(geoObservables).subscribe(responses => {\r\n      this.positions = this.extractPositions(responses);\r\n      this.addresses = addresses;\r\n      });\r\n  }\r\n\r\n  private prepareAddressTranslation(addresses: string[]): Observable<any>[] {\r\n    return addresses\r\n      .map(address => this.mapComponent.geoCoder.geocode({address: address})\r\n        .catch(error => Observable.of({}))\r\n        .map(response => (response.length > 0) ? response[0] : []));\r\n  }\r\n\r\n  private buildAddressArrayForStations(): string[] {\r\n    let addresses = [];\r\n    addresses.push(this.parcel.departure.road + ', ' + this.parcel.departure.city.name + ' ' + this.parcel.departure.country);\r\n    this.parcel.stations.forEach(station => addresses.push(station.location.road + ', ' + station.location.city.name + ' ' + station.location.country));\r\n    addresses.push(this.parcel.destination.road + ', ' + this.parcel.destination.city.name + ' ' + this.parcel.destination.country);\r\n    addresses = addresses.filter(address => address);\r\n    return addresses;\r\n  }\r\n\r\n  private loadParcel(): void {\r\n    this.route.paramMap\r\n      .switchMap((params: ParamMap) => this.parcelManagementService.getParcel(params.get('trackingNumber')))\r\n      .catch(error => {this.router.navigate(['']); return []; })\r\n      .subscribe(parcel => {\r\n        this.parcel = parcel;\r\n        this.loadPositions();\r\n      });\r\n  }\r\n\r\n  private updateShowAddStationButton(): void {\r\n    if (this.authorizationService.isAuthenticated()) {\r\n      Observable.zip(this.authorizationService.isAdmin(), this.authorizationService.isStaff()).subscribe(\r\n        ([isAdmin, isStaff]) => this.showAddStationButton = (isAdmin || isStaff));\r\n    }\r\n  }\r\n\r\n  private extractPositions(responses: GeocoderResult[]): google.maps.LatLng[] {\r\n    let positions = [];\r\n    responses.forEach((response: GeocoderResult) => {\r\n      if (response.geometry) {\r\n        positions.push(new google.maps.LatLng(response.geometry.location.lat(), response.geometry.location.lng()));\r\n      }\r\n    });\r\n    return positions;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/parcel-details/parcel-details.component.ts","module.exports = \".container {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.deleteIcon {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/parcel-type/parcel-type.component.css\n// module id = ./src/app/parcel-type/parcel-type.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12\\\">\\n    <h1 class=\\\"center-align\\\">Parcel types</h1>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12\\\">\\n      <table>\\n        <thead>\\n        <tr>\\n          <th>Type</th>\\n          <th class=\\\"center-align\\\">Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let parcelType of parcelTypes\\\">\\n          <td>{{parcelType}}</td>\\n          <td class=\\\"center\\\">\\n            <a materialize=\\\"tooltip\\\" class=\\\"modal-trigger tooltipped\\\" (click)=\\\"openDeleteParcelTypeModal(parcelType)\\\" href=\\\"#deleteParcelTypeModal\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Delete parcel type\\\" data-position=\\\"bottom\\\">\\n              <i class=\\\"material-icons deleteIcon blue-grey-text\\\">delete</i>\\n            </a>\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"parcelTypes && parcelTypes.length == 0\\\">\\n          <td colspan=\\\"4\\\" class=\\\"center\\\">No parcel types in database!</td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <a materialize=\\\"tooltip\\\" class=\\\"btn-floating waves-effect waves-light blue-grey tooltipped modal-trigger\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Add a parcel type\\\" data-position=\\\"right\\\" (click)=\\\"openNewParcelTypeModal()\\\" href=\\\"#addParcelTypeModal\\\">\\n              <i class=\\\"material-icons\\\">add</i>\\n            </a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<!-- Delete parcel type modal -->\\n<div id=\\\"deleteParcelTypeModal\\\" class=\\\"modal bottom-sheet blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: true}]\\\" [materializeActions]=\\\"deleteParcelTypeModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h4>Are you sure, that you want to delete the parcel type?</h4>\\n    <p *ngIf=\\\"delParcelType\\\">{{delParcelType}} can´t get selected anymore if you proceed.</p>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"modal-action modal-close btn-flat\\\">Abort</a>\\n    <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\" (click)=\\\"deleteParcelType(delParcelType);\\\">Proceed</a>\\n  </div>\\n</div>\\n\\n<!-- Add parcel type modal -->\\n<div id=\\\"addParcelTypeModal\\\" class=\\\"modal blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"newParcelTypeModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\">\\n      <i class=\\\"material-icons blue-grey-text\\\">cancel</i>\\n    </a>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <h4 class=\\\"center-align\\\">Add a new parcel type</h4>\\n        </div>\\n      </div>\\n      <form>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"parcelTypeName\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"parcelTypeName\\\" [(ngModel)]=\\\"newParcelTypeName\\\" required>\\n            <label for=\\\"parcelTypeName\\\">Parcel type</label>\\n          </div>\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"parcelTypeKey\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"parcelTypeKey\\\" [(ngModel)]=\\\"newParcelTypeKey\\\" required>\\n            <label for=\\\"parcelTypeKey\\\">Parcel type (has to consists of two digits)</label>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"waves-effect modal-action modal-close waves-green waves-darken-3 btn-flat\\\" (click)=\\\"addParcelType(newParcelTypeName, newParcelTypeKey);\\\">Add parcel type</a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/parcel-type/parcel-type.component.html\n// module id = ./src/app/parcel-type/parcel-type.component.html\n// module chunks = main","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {MaterializeAction} from \"angular2-materialize\";\nimport {DataManagementService} from \"../services/data-management.service\";\n\n@Component({\n  selector: 'app-parcel-type',\n  templateUrl: './parcel-type.component.html',\n  styleUrls: ['./parcel-type.component.css']\n})\nexport class ParcelTypeComponent implements OnInit {\n\n  public newParcelTypeName: string;\n  public newParcelTypeKey: string;\n  public parcelTypes: string[] = [];\n  public delParcelType: string;\n  public newParcelTypeModalActions = new EventEmitter<string|MaterializeAction>();\n  public deleteParcelTypeModalActions = new EventEmitter<string|MaterializeAction>();\n\n  constructor(private dataManagementService: DataManagementService) { }\n\n  ngOnInit() {\n    this.updateParcelTypes();\n    this.newParcelTypeName = \"\";\n    this.newParcelTypeKey = \"\";\n  }\n\n  public openDeleteParcelTypeModal(parcelType: string): void {\n    this.delParcelType = parcelType;\n    this.deleteParcelTypeModalActions.emit({action: \"modal\", params: [ 'open' ]});\n  }\n\n  public openNewParcelTypeModal(): void {\n    this.newParcelTypeModalActions.emit({action: \"modal\", params: [ 'open' ]});\n  }\n\n  public addParcelType(parcelTypeName: string, parcelTypeKey: string): void {\n    this.dataManagementService.addParcelType(parcelTypeName, parcelTypeKey).subscribe(response => {\n      this.updateParcelTypes();\n      this.newParcelTypeName = \"\";\n      this.newParcelTypeKey = \"\";\n    });\n  }\n\n  public deleteParcelType(type: string): void {\n    this.dataManagementService.removeParcelType(type).subscribe(response => this.updateParcelTypes());\n  }\n\n  //actions\n  private updateParcelTypes(): void {\n    this.dataManagementService.listParcelTypes().subscribe(response => this.parcelTypes = response);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/parcel-type/parcel-type.component.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from \"../login/login.component\";\r\nimport {HomeComponent} from \"../home/home.component\";\r\nimport {StaffManagementComponent} from \"../staff-management/staff-management.component\";\r\nimport {AuthGuard} from \"./auth.guard\";\r\nimport {ParcelDetailsComponent} from \"../parcel-details/parcel-details.component\";\r\nimport {DataManagementComponent} from \"../data-management/data-management.component\";\r\nimport {AddStationComponent} from \"../add-station/add-station.component\";\r\n\r\nexport const ROUTE_CONFIG: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'staff',\r\n    canActivate: [AuthGuard],\r\n    component: StaffManagementComponent\r\n  },\r\n  {\r\n    path: 'track/:trackingNumber',\r\n    component: ParcelDetailsComponent\r\n  },\r\n  {\r\n    path: 'data',\r\n    canActivate: [AuthGuard],\r\n    component: DataManagementComponent\r\n  },\r\n  {\r\n    path: 'parcelManagement/:trackingNumber',\r\n    canActivate: [AuthGuard],\r\n    component: AddStationComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: ''\r\n  }\r\n];\r\n\r\nexport const AppRoutesModule = RouterModule.forRoot(ROUTE_CONFIG);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routing/app.routes.ts","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs/Observable';\nimport {AuthorizationService} from \"../services/authorization.service\";\nimport {ROUTER_CONFIG} from \"../../assets/config\";\nimport {RouterConfig} from \"../data-objects/config\";\nimport \"rxjs/add/observable/zip\";\n\ndeclare var Materialize: any;\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  private routerConfig: RouterConfig = ROUTER_CONFIG;\n\n  constructor(private router: Router,\n              private authenticationService: AuthorizationService) {}\n\n  private static showForbiddenToast(url: string): void {\n    Materialize.toast('You are not allowed to access the page ' + url, 3000, '');\n  }\n\n  public canActivate(next: ActivatedRouteSnapshot,\n              state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n    let route: string = state.url;\n    if (this.isAnonymUser()) {\n      return this.canAnonymActivate(route);\n    }\n    return this.checkPrivileges(route);\n  }\n\n  //actions\n  private checkPrivileges(route: string): Observable<boolean> {\n    return Observable.zip(\n      this.authenticationService.isAdmin(),\n      this.authenticationService.isStaff(),\n      (isAdmin, isStaff) => {\n        if (isAdmin) {\n          return this.routeMatchesRegexFromList(this.routerConfig.allowedAdminRoutes, route);\n        }\n        let canAccess = isStaff && this.routeMatchesRegexFromList(this.routerConfig.allowedStaffRoutes, route);\n        if (!canAccess) {\n          this.router.navigate(['']);\n          AuthGuard.showForbiddenToast(route);\n        }\n        return canAccess\n      }\n    );\n  }\n\n  private canAnonymActivate(route: string): boolean {\n    if (!this.routeMatchesRegexFromList(this.routerConfig.allowedUserRoutes, route)) {\n      this.router.navigate(['/login'], {queryParams: {returnUrl: route}});\n      return false;\n    }\n    return true;\n  }\n\n  private routeMatchesRegexFromList(allowedRoutes: string[], route: string): boolean {\n    return allowedRoutes.filter(allowedRoute => route.match(allowedRoute)).length > 0;\n  }\n\n  private isAnonymUser(): boolean {\n    return !this.authenticationService.isAuthenticated()\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/routing/auth.guard.ts","import {Injectable} from '@angular/core';\nimport {Http, Response} from \"@angular/http\";\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/catch'\nimport { Observable } from 'rxjs/Rx';\nimport * as shajs from 'sha.js';\n\n\nimport {CookieService} from \"ngx-cookie\";\nimport {HelperMethods} from \"../helper-methods\";\nimport {RouterConfig} from \"../data-objects/config\";\nimport {ROUTER_CONFIG} from \"../../assets/config\";\nimport {Router} from \"@angular/router\";\n\n@Injectable()\nexport class AuthorizationService {\n\n  public AUTHORIZATION_TOKEN_COOKIE = 'authorizationToken';\n\n  private helperMethods: HelperMethods;\n  private routerConfig: RouterConfig = ROUTER_CONFIG;\n\n  constructor(private router: Router,\n              private http: Http,\n              private cookieService: CookieService) {\n    this.helperMethods = new HelperMethods(this);\n  }\n\n  public isBackendRunning(): Observable<Response> {\n    return this.http.get(this.routerConfig.serverAddress);\n  }\n\n  public login(email: string, password: string): Observable<boolean> {\n    const params = {\n      email: email,\n      password: AuthorizationService.hashPassword(password)\n    };\n    return this.http.get(this.routerConfig.serverAddress + '/authorize', {params: params})\n                    .map(HelperMethods.extractData)\n                    .catch(event => this.helperMethods.handleError(event))\n                    .map(response => {\n                      if (response.authorized) {\n                        this.storeTokenIntoCookies(response.authorizationToken);\n                      }\n                      return response.authorized;\n                    });\n  }\n\n  public isAdmin(): Observable<boolean> {\n    const params = {\n      authorizationToken: this.getToken()\n    };\n    return this.http.get(this.routerConfig.serverAddress + '/isAdmin', {params: params})\n                    .map(HelperMethods.extractData)\n                    .catch(event => this.helperMethods.handleError(event))\n                    .map(response => response.admin);\n  }\n\n  public isStaff(): Observable<boolean> {\n    const params = {\n      authorizationToken: this.getToken()\n    };\n    return this.http.get(this.routerConfig.serverAddress + '/isStaff', {params: params})\n                    .map(HelperMethods.extractData)\n                    .catch(event => this.helperMethods.handleError(event))\n                    .map(response => response.staff);\n  }\n\n  public isAuthenticated(): boolean {\n    return this.cookieService.get(this.AUTHORIZATION_TOKEN_COOKIE) != null;\n  }\n\n  public logout(): void {\n    this.cookieService.remove(this.AUTHORIZATION_TOKEN_COOKIE);\n    this.router.navigateByUrl('/login');\n    const params = {\n      authorizationToken: this.getToken()\n    };\n    this.http.delete(this.routerConfig.serverAddress + '/logout', {params: params}).subscribe();\n  }\n\n  //actions\n  public static hashPassword(rawPassword: string): string {\n    return shajs('sha256').update(rawPassword).digest('hex');\n  }\n\n  private storeTokenIntoCookies(token: string): void {\n    this.cookieService.put(this.AUTHORIZATION_TOKEN_COOKIE, token);\n  }\n\n  public getToken(): string {\n    return this.cookieService.get(this.AUTHORIZATION_TOKEN_COOKIE);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/authorization.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http, RequestOptions, Response} from \"@angular/http\";\nimport {AuthorizationService} from \"./authorization.service\";\nimport {HelperMethods} from \"../helper-methods\";\nimport {Observable} from \"rxjs/Rx\";\nimport {ROUTER_CONFIG} from \"../../assets/config\";\nimport {RouterConfig} from \"../data-objects/config\";\n\n@Injectable()\nexport class DataManagementService {\n\n  private helperMethods: HelperMethods;\n  private routerConfig: RouterConfig = ROUTER_CONFIG;\n\n\n  constructor(private http: Http,\n              private authorizationService: AuthorizationService) {\n    this.helperMethods = new HelperMethods(authorizationService);\n  }\n\n  public listParcelTypes(): Observable<string[]> {\n    return this.http.get(this.routerConfig.serverAddress + '/listParcelTypes')\n      .map(HelperMethods.extractData)\n      .catch(event => this.helperMethods.handleError(event))\n      .map(response => response.parcelTypes);\n  }\n\n  public listTransportationModes(): Observable<string[]> {\n    return this.http.get(this.routerConfig.serverAddress + '/listTransportationModes')\n      .map(HelperMethods.extractData)\n      .catch(event => this.helperMethods.handleError(event))\n      .map(response => response.transportationModes);\n  }\n\n  public listActionDescriptions(): Observable<string[]> {\n    return this.http.get(this.routerConfig.serverAddress + '/listActionDescriptions')\n      .map(HelperMethods.extractData)\n      .catch(event => this.helperMethods.handleError(event))\n      .map(response => response.actionDescriptions);\n  }\n\n  public addTransportationMode(mode: string): Observable<Response> {\n    const body = {\n      authorizationToken: this.authorizationService.getToken(),\n      mode: mode\n    };\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.routerConfig.serverAddress + '/addTransportationMode', JSON.stringify(body), options)\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public addActionDescription(actionDescription: string): Observable<Response> {\n    const body = {\n      authorizationToken: this.authorizationService.getToken(),\n      actionDescription: actionDescription\n    };\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.routerConfig.serverAddress + '/addActionDescription', JSON.stringify(body), options)\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public addParcelType(type: string, key: string): Observable<Response> {\n    const body = {\n      authorizationToken: this.authorizationService.getToken(),\n      type: type,\n      key: key\n    };\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.routerConfig.serverAddress + '/addParcelType', JSON.stringify(body), options)\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public removeTransportationMode(mode: string): Observable<Response> {\n    const params = {\n      authorizationToken: this.authorizationService.getToken(),\n      mode: mode\n    };\n    return this.http.delete(this.routerConfig.serverAddress + '/removeTransportationMode', {params: params})\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public removeActionDescription(action: string): Observable<Response> {\n    const params = {\n      authorizationToken: this.authorizationService.getToken(),\n      action: action\n    };\n    return this.http.delete(this.routerConfig.serverAddress + '/removeActionDescription', {params: params})\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public removeParcelType(type: string): Observable<Response> {\n    const params = {\n      authorizationToken: this.authorizationService.getToken(),\n      type: type\n    };\n    return this.http.delete(this.routerConfig.serverAddress + '/removeParcelType', {params: params})\n      .catch(event => this.helperMethods.handleError(event));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data-management.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http, RequestOptions, Response} from \"@angular/http\";\nimport {Parcel, Station} from \"../data-objects/parcel-management\";\nimport {HelperMethods} from \"../helper-methods\";\nimport 'rxjs/add/operator/map'\nimport 'rxjs/add/operator/catch'\nimport { Observable } from 'rxjs/Rx';\nimport {RouterConfig} from \"../data-objects/config\";\nimport {ROUTER_CONFIG} from \"../../assets/config\";\nimport {AuthorizationService} from \"./authorization.service\";\n\n\n@Injectable()\nexport class ParcelManagementService {\n\n  private helperMethods: HelperMethods;\n  private routerConfig: RouterConfig = ROUTER_CONFIG;\n\n  constructor(private http: Http,\n              private authorizationService: AuthorizationService) {\n    this.helperMethods = new HelperMethods(authorizationService);\n  }\n\n  public createParcel(parcel: Parcel): Observable<string> {\n    parcel.handOverTimestamp = new Date().getTime();\n    const parameter = {parcel: parcel};\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.routerConfig.serverAddress + '/createParcel', JSON.stringify(parameter), options)\n      .map(HelperMethods.extractData)\n      .catch(event => this.helperMethods.handleError(event))\n      .map(response => response.trackingNumber);\n  }\n\n  public getParcel(trackingNumber: string): Observable<Parcel> {\n    const params = {trackingNumber: trackingNumber};\n    return this.http.get(this.routerConfig.serverAddress + '/getParcel', {params: params})\n                    .map(HelperMethods.extractData)\n                    .catch(event => this.helperMethods.handleError(event))\n                    .map(response => response.parcel);\n  }\n\n  public addStation(trackingNumber: string, station: Station): Observable<Response> {\n    station.timestamp = new Date().getTime();\n    const body = {\n      authorizationToken: this.authorizationService.getToken(),\n      station: station,\n      trackingNumber: trackingNumber\n    };\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.patch(this.routerConfig.serverAddress + '/addStation', JSON.stringify(body), options)\n      .catch(event => this.helperMethods.handleError(event));\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/parcel-management.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http, RequestOptions, Response} from \"@angular/http\";\nimport {RouterConfig} from \"../data-objects/config\";\nimport {ROUTER_CONFIG} from \"../../assets/config\";\nimport {Observable} from \"rxjs/Rx\";\nimport {StaffMember} from \"../data-objects/authorization\";\nimport {HelperMethods} from \"../helper-methods\";\nimport {AuthorizationService} from \"./authorization.service\";\n\n@Injectable()\nexport class StaffManagementService {\n\n  private helperMethods: HelperMethods;\n  private routerConfig: RouterConfig = ROUTER_CONFIG;\n\n  constructor(private http: Http,\n              private authorizationService: AuthorizationService) {\n    this.helperMethods = new HelperMethods(authorizationService);\n  }\n\n  public listStaff(): Observable<StaffMember[]> {\n    const params = {\n      authorizationToken: this.authorizationService.getToken()\n    };\n    return this.http.get(this.routerConfig.serverAddress + '/listStaff', {params: params})\n      .map(HelperMethods.extractData)\n      .catch(event => this.helperMethods.handleError(event))\n      .map(response => response.staffMembers);\n  }\n\n  public deleteStaffMember(id: string): Observable<any> {\n    const params = {\n      authorizationToken: this.authorizationService.getToken(),\n      staffID: id\n    };\n    return this.http.delete(this.routerConfig.serverAddress + '/removeStaff', {params: params})\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n  public addStaffMember(staffMember: StaffMember): Observable<Response> {\n    staffMember.password = AuthorizationService.hashPassword(staffMember.password);\n    const body = {\n      authorizationToken: this.authorizationService.getToken(),\n      staffMember: staffMember\n    };\n    let headers = new Headers({ 'Content-Type': 'application/json' });\n    let options = new RequestOptions({ headers: headers });\n    return this.http.post(this.routerConfig.serverAddress + '/addStaff', JSON.stringify(body), options)\n      .catch(event => this.helperMethods.handleError(event));\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/staff-management.service.ts","module.exports = \"#background {\\r\\n  min-height: 100vh;\\r\\n  min-width: 100vw;\\r\\n  padding-top: 100px;\\r\\n  height: 100%;\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n#addStaffModal {\\r\\n  max-width: 700px;\\r\\n}\\r\\n\\r\\n.deleteIcon {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/staff-management/staff-management.component.css\n// module id = ./src/app/staff-management/staff-management.component.css\n// module chunks = main","module.exports = \"<div id=\\\"background\\\" class=\\\"blue-grey lighten-5\\\">\\n  <div class=\\\"container white z-depth-1\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col s12\\\">\\n        <h1 class=\\\"center-align\\\">Staff members</h1>\\n      </div>\\n    </div>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <table>\\n            <thead>\\n              <tr>\\n                <th>Forename</th>\\n                <th>Lastname</th>\\n                <th>Email</th>\\n                <th>Department</th>\\n                <th class=\\\"center-align\\\">Delete</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n            <tr *ngFor=\\\"let staffMember of staffMembers\\\">\\n              <td>{{staffMember.foreName}}</td>\\n              <td>{{staffMember.lastName}}</td>\\n              <td>{{staffMember.email}}</td>\\n              <td>{{staffMember.department}}</td>\\n              <td class=\\\"center\\\">\\n                <a materialize=\\\"tooltip\\\" class=\\\"modal-trigger tooltipped\\\" (click)=\\\"openDeleteStaffModal(staffMember)\\\" href=\\\"#deleteStaffModal\\\"\\n                   data-delay=\\\"50\\\" data-tooltip=\\\"Delete staff member\\\" data-position=\\\"bottom\\\">\\n                  <i class=\\\"material-icons deleteIcon blue-grey-text\\\">delete</i>\\n                </a>\\n              </td>\\n            </tr>\\n            <tr *ngIf=\\\"staffMembers && staffMembers.length == 0\\\">\\n              <td colspan=\\\"4\\\" class=\\\"center\\\">No staff members in database!</td>\\n            </tr>\\n            <tr>\\n              <td>\\n                <a materialize=\\\"tooltip\\\" class=\\\"btn-floating waves-effect waves-light blue-grey tooltipped modal-trigger\\\"\\n                   data-delay=\\\"50\\\" data-tooltip=\\\"Add a staff member\\\" data-position=\\\"right\\\" (click)=\\\"openNewStaffModal()\\\" href=\\\"#addStaffModal\\\">\\n                  <i class=\\\"material-icons\\\">add</i>\\n                </a>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <!-- Delete staff member modal -->\\n  <div id=\\\"deleteStaffModal\\\" class=\\\"modal bottom-sheet blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: true}]\\\" [materializeActions]=\\\"deleteStaffModalActions\\\">\\n    <div class=\\\"modal-content\\\">\\n      <h4>Are you sure, that you want to delete the staff member?</h4>\\n      <p *ngIf=\\\"deleteStaffMember\\\">{{deleteStaffMember.foreName}} {{deleteStaffMember.lastName}} want be able to access the staff section if you proceed.</p>\\n    </div>\\n    <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n      <a class=\\\"modal-action modal-close btn-flat\\\">Abort</a>\\n      <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\" (click)=\\\"deleteStaff(deleteStaffMember.id);\\\">Proceed</a>\\n    </div>\\n  </div>\\n  <!-- Add staff member modal -->\\n\\n  <div id=\\\"addStaffModal\\\" class=\\\"modal blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"newStaffModalActions\\\">\\n    <div class=\\\"modal-content\\\">\\n      <a class=\\\"modal-action modal-close waves-effect waves-red waves-darken-3 btn-flat\\\">\\n        <i class=\\\"material-icons blue-grey-text\\\">cancel</i>\\n      </a>\\n      <div class=\\\"container\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col s12\\\">\\n            <h4 class=\\\"center-align\\\">Add a new staff member</h4>\\n          </div>\\n        </div>\\n        <form>\\n          <div class=\\\"row no-margin\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input id=\\\"forename\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"forename\\\" [(ngModel)]=\\\"newStaffMember.foreName\\\" required>\\n              <label for=\\\"forename\\\">Forename</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row no-margin\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input id=\\\"lastname\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"lastname\\\" [(ngModel)]=\\\"newStaffMember.lastName\\\" required>\\n              <label for=\\\"lastname\\\">Lastname</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row no-margin\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input id=\\\"email\\\" type=\\\"email\\\" class=\\\"validate\\\" name=\\\"email\\\" [(ngModel)]=\\\"newStaffMember.email\\\" required>\\n              <label for=\\\"email\\\">Email</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row no-margin\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input disabled id=\\\"password\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"password\\\" [(ngModel)]=\\\"newStaffMember.password\\\" required>\\n              <label for=\\\"password\\\">Password</label>\\n            </div>\\n          </div>\\n          <div class=\\\"row no-margin\\\">\\n            <div class=\\\"input-field col s12\\\">\\n              <input id=\\\"department\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"department\\\" [(ngModel)]=\\\"newStaffMember.department\\\" required>\\n              <label for=\\\"department\\\">Department</label>\\n            </div>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n      <a class=\\\"waves-effect modal-action modal-close waves-green waves-darken-3 btn-flat\\\" (click)=\\\"addStaff(newStaffMember);\\\">Add Staff</a>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/staff-management/staff-management.component.html\n// module id = ./src/app/staff-management/staff-management.component.html\n// module chunks = main","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {StaffMember} from '../data-objects/authorization';\nimport {MaterializeAction} from 'angular2-materialize';\nimport {HelperMethods} from '../helper-methods';\nimport {StaffManagementService} from '../services/staff-management.service';\n\n@Component({\n  selector: 'app-staff-management',\n  templateUrl: './staff-management.component.html',\n  styleUrls: ['./staff-management.component.css']\n})\nexport class StaffManagementComponent implements OnInit {\n\n  public newStaffModalActions = new EventEmitter<string|MaterializeAction>();\n  public deleteStaffModalActions = new EventEmitter<string|MaterializeAction>();\n  public staffMembers: StaffMember[];\n  public newStaffMember: StaffMember;\n  public deleteStaffMember: StaffMember;\n\n  constructor(private staffManagementService: StaffManagementService) { }\n\n  ngOnInit() {\n    this.updateStaffMembers();\n    this.generateNewStaffmember();\n  }\n\n  public openNewStaffModal(): void {\n    this.newStaffModalActions.emit({action: 'modal', params: [ 'open' ]});\n  }\n\n  public openDeleteStaffModal(staffMember: StaffMember): void {\n    this.deleteStaffMember = staffMember;\n    this.deleteStaffModalActions.emit({action: 'modal', params: [ 'open' ]});\n  }\n\n  public addStaff(staffMember: StaffMember): void {\n    let success: boolean = true;\n    this.staffManagementService.addStaffMember(staffMember)\n      .catch(error => { success = false; return error}).subscribe(response => {\n        if (success) {\n          this.updateStaffMembers();\n          this.generateNewStaffmember();\n        }\n      });\n  }\n\n  public deleteStaff(id: string): void {\n    this.staffManagementService.deleteStaffMember(id).subscribe(response => this.updateStaffMembers());\n  }\n\n  //actions\n  private updateStaffMembers(): void {\n    this.staffManagementService.listStaff().subscribe(response => this.staffMembers = response);\n  }\n\n  private generateNewStaffmember(): void {\n    this.newStaffMember = new StaffMember();\n    this.newStaffMember.password = HelperMethods.generateInitialPassword();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/staff-management/staff-management.component.ts","module.exports = \".container {\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\n.deleteIcon {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transportation-mode/transportation-mode.component.css\n// module id = ./src/app/transportation-mode/transportation-mode.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col s12\\\">\\n    <h1 class=\\\"center-align\\\">Transportation modes</h1>\\n  </div>\\n</div>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col s12\\\">\\n      <table>\\n        <thead>\\n        <tr>\\n          <th>Modes</th>\\n          <th class=\\\"center-align\\\">Delete</th>\\n        </tr>\\n        </thead>\\n        <tbody>\\n        <tr *ngFor=\\\"let mode of modes\\\">\\n          <td>{{mode}}</td>\\n          <td class=\\\"center\\\">\\n            <a materialize=\\\"tooltip\\\" class=\\\"modal-trigger tooltipped\\\" (click)=\\\"openDeleteModeModal(mode)\\\" href=\\\"#deleteModeModal\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Delete mode\\\" data-position=\\\"bottom\\\">\\n              <i class=\\\"material-icons deleteIcon blue-grey-text\\\">delete</i>\\n            </a>\\n          </td>\\n        </tr>\\n        <tr *ngIf=\\\"modes && modes.length == 0\\\">\\n          <td colspan=\\\"4\\\" class=\\\"center\\\">No transportation mode in database!</td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <a materialize=\\\"tooltip\\\" class=\\\"btn-floating waves-effect waves-light blue-grey tooltipped modal-trigger\\\"\\n               data-delay=\\\"50\\\" data-tooltip=\\\"Add a transportation mode\\\" data-position=\\\"right\\\" (click)=\\\"openNewModeModal()\\\" href=\\\"#addModeModal\\\">\\n              <i class=\\\"material-icons\\\">add</i>\\n            </a>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</div>\\n<!-- Delete mode modal -->\\n<div id=\\\"deleteModeModal\\\" class=\\\"modal bottom-sheet blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: true}]\\\" [materializeActions]=\\\"deleteModeModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <h4>Are you sure, that you want to delete the mode?</h4>\\n    <p *ngIf=\\\"delMode\\\">{{delMode}} can´t get selected anymore if you proceed.</p>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"modal-mode modal-close btn-flat\\\">Abort</a>\\n    <a class=\\\"modal-mode modal-close waves-effect waves-red waves-darken-3 btn-flat\\\" (click)=\\\"deleteMode(delMode);\\\">Proceed</a>\\n  </div>\\n</div>\\n\\n<!-- Add mode modal -->\\n<div id=\\\"addModeModal\\\" class=\\\"modal blue-grey lighten-5\\\" materialize=\\\"modal\\\" [materializeParams]=\\\"[{dismissible: false}]\\\" [materializeActions]=\\\"newModeModalActions\\\">\\n  <div class=\\\"modal-content\\\">\\n    <a class=\\\"modal-mode modal-close waves-effect waves-red waves-darken-3 btn-flat\\\">\\n      <i class=\\\"material-icons blue-grey-text\\\">cancel</i>\\n    </a>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col s12\\\">\\n          <h4 class=\\\"center-align\\\">Add a new transportation mode</h4>\\n        </div>\\n      </div>\\n      <form>\\n        <div class=\\\"row no-margin\\\">\\n          <div class=\\\"input-field col s12\\\">\\n            <input id=\\\"mode\\\" type=\\\"text\\\" class=\\\"validate\\\" name=\\\"mode\\\" [(ngModel)]=\\\"newMode\\\" required>\\n            <label for=\\\"mode\\\">Transportation mode</label>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n  <div class=\\\"modal-footer blue-grey lighten-5\\\">\\n    <a class=\\\"waves-effect modal-mode modal-close waves-green waves-darken-3 btn-flat\\\" (click)=\\\"addMode(newMode);\\\">Add transportation mode</a>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/transportation-mode/transportation-mode.component.html\n// module id = ./src/app/transportation-mode/transportation-mode.component.html\n// module chunks = main","import {Component, EventEmitter, OnInit} from '@angular/core';\nimport {MaterializeAction} from 'angular2-materialize';\nimport {DataManagementService} from '../services/data-management.service';\n\n@Component({\n  selector: 'app-transportation-mode',\n  templateUrl: './transportation-mode.component.html',\n  styleUrls: ['./transportation-mode.component.css']\n})\nexport class TransportationModeComponent implements OnInit {\n\n  public newMode: string;\n  public modes: string[] = [];\n  public delMode: string;\n  public newModeModalActions = new EventEmitter<string | MaterializeAction>();\n  public deleteModeModalActions = new EventEmitter<string | MaterializeAction>();\n\n  constructor(private dataManagementService: DataManagementService) {\n  }\n\n  ngOnInit() {\n    this.updateModes();\n    this.newMode = '';\n  }\n\n  public openDeleteModeModal(action: string): void {\n    this.delMode = action;\n    this.deleteModeModalActions.emit({action: 'modal', params: ['open']});\n  }\n\n  public openNewModeModal(): void {\n    this.newModeModalActions.emit({action: 'modal', params: ['open']});\n  }\n\n  public addMode(action: string): void {\n    this.dataManagementService.addTransportationMode(action).subscribe(response => {\n      this.updateModes();\n      this.newMode = '';\n    });\n  }\n\n  public deleteMode(action: string): void {\n    this.dataManagementService.removeTransportationMode(action).subscribe(response => this.updateModes());\n  }\n\n  //actions\n  private updateModes(): void {\n    this.dataManagementService.listTransportationModes().subscribe(response => this.modes = response);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/transportation-mode/transportation-mode.component.ts","import {RouterConfig} from \"../app/data-objects/config\";\r\n\r\nexport const ROUTER_CONFIG: RouterConfig = {\r\n  serverAddress: 'http://localhost:2018',\r\n  allowedUserRoutes: [\r\n    '^$',\r\n    '^/login'\r\n  ],\r\n  allowedAdminRoutes: [\r\n    '.*'\r\n  ],\r\n  allowedStaffRoutes: [\r\n    '^$',\r\n    '^/login',\r\n    '^/parcelManagement'\r\n  ]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/config.ts","export const environment = {\r\n  production: true\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}